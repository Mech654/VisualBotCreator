// Component panel styles
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use 'sass:color';

// Component panel container 
.components-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  background-color: $surface;
  overflow: hidden;
  
  // Custom scrollbar
  @include custom-scrollbar;
}

// Component search
.component-search {
  padding: $spacing-sm;
  position: sticky;
  top: 0;
  z-index: 5;
  background-color: $surface;
  
  input {
    width: 100%;
    height: 38px;
    padding: 0 $spacing-md 0 $spacing-xl;
    border-radius: $border-radius;
    border: 1px solid $border-color;
    background-color: rgba($background, 0.6);
    color: $text-primary;
    font-size: $font-size-sm;
    transition: all $transition-time-fast $transition-function;
    
    &:focus {
      outline: none;
      border-color: $primary;
      box-shadow: 0 0 0 2px rgba($primary, 0.2);
      background-color: $background;
    }
    
    &::placeholder {
      color: $text-hint;
    }
  }
  
  &::before {
    content: '';
    position: absolute;
    left: $spacing-md;
    top: 50%;
    transform: translateY(-50%);
    font-size: $font-size-sm;
    pointer-events: none;
    opacity: 0.7;
    width: 16px;
    height: 16px;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23888888' class='bi bi-search' viewBox='0 0 16 16'%3e%3cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
  }
}

// Component filters
.component-filters {
  display: flex;
  padding: 0 $spacing-sm $spacing-sm;
  gap: $spacing-xs;
  flex-wrap: wrap;
  
  .filter-pill {
    padding: $spacing-xs $spacing-sm;
    border-radius: $border-radius-lg;
    background-color: $surface-variant;
    color: $text-secondary;
    font-size: $font-size-xs;
    cursor: pointer;
    transition: all $transition-time-fast $transition-function;
    
    &:hover {
      background-color: rgba($primary, 0.1);
      color: $primary;
    }
    
    &.active {
      background-color: rgba($primary, 0.2);
      color: $primary;
      font-weight: $font-weight-medium;
    }
  }
}

// Component categories container
.component-categories-container {
  flex: 1;
  overflow-y: auto;
  padding: 0 $spacing-sm;
}

// Component category
.component-category {
  margin-bottom: $spacing-md;
  
  // Category header
  .category-header {
    display: flex;
    align-items: center;
    gap: $spacing-xs;
    padding: $spacing-xs 0;
    cursor: pointer;
    user-select: none;
    color: $text-secondary;
    border-bottom: 1px solid $border-color;
    margin-bottom: $spacing-sm;
    
    &:hover {
      color: $text-primary;
    }
    
    .category-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: $font-size-lg;
      
      svg {
        width: 20px;
        height: 20px;
        stroke: currentColor;
      }
    }
    
    .category-title {
      flex: 1;
      font-size: $font-size-sm;
      font-weight: $font-weight-medium;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .category-toggle {
      font-size: $font-size-xs;
      transition: transform 0.2s ease;
      
      &.collapsed {
        transform: rotate(-90deg);
      }
    }
  }
  
  // Component list
  .component-list {
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-xs;
    padding-bottom: $spacing-sm;
    
    &.collapsed {
      display: none;
    }
  }
}

// Component item
.component-item {
  flex: 1;
  min-width: 90px;
  max-width: calc(100% / 2 - #{$spacing-xs});
  aspect-ratio: 1.2;
  background-color: $background;
  border-radius: $border-radius;
  padding: $spacing-sm;
  border: 1px solid transparent;
  cursor: grab;
  transition: all $transition-time-fast $transition-function;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  position: relative;
  overflow: hidden;
  
  @media (min-width: 400px) {
    max-width: calc(100% / 3 - #{$spacing-xs});
  }
  
  @media (min-width: 500px) {
    max-width: calc(100% / 4 - #{$spacing-xs});
  }
  
  @media (min-width: 600px) {
    max-width: calc(100% / 5 - #{$spacing-xs});
  }
  
  &:hover {
    border-color: $primary;
    transform: translateY(-2px);
    box-shadow: $shadow-sm;
    z-index: 1;
    
    .component-icon {
      transform: scale(1.1);
    }
  }
  
  &:active {
    transform: scale(0.95);
    cursor: grabbing;
  }
  
  // Flow type indicator
  .flow-type-indicator {
    position: absolute;
    top: 4px;
    left: 4px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    
    &.flow-type {
      background-color: $port-control;
    }
    
    &.data-type {
      background-color: $port-string;
    }
  }
  
  // Icon
  .component-icon {
    all: initial;
    width: 32px;
    height: 32px;
    margin-bottom: var(--spacing-xs, 0.5rem);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-xl, 1.25rem);
    transition: transform var(--transition-time-fast, 0.15s) var(--transition-function, cubic-bezier(0.4, 0, 0.2, 1));
    
    /* Reset color and background for SVG icons */
    color: unset !important;
    background: unset !important;
    background-color: unset !important;
    border-radius: unset !important;
    box-shadow: unset !important;
    
    svg {
      all: unset;
      width: 24px;
      height: 24px;
      stroke: unset;
      stroke-width: unset;
      fill: unset;
      background: unset;
    }
  }
  
  // Name
  .component-name {
    font-size: $font-size-xs;
    font-weight: $font-weight-medium;
    color: $text-secondary;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    transition: color $transition-time-fast $transition-function;
  }
  
  &:hover .component-name {
    color: $text-primary;
  }
  
  // Customize icon colors based on node type
  &[data-type="message"] .component-icon { 
    color: $port-text;
    background-color: rgba($port-text, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="condition"] .component-icon { 
    color: $port-boolean;
    background-color: rgba($port-boolean, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="input"] .component-icon { 
    color: $port-input;
    background-color: rgba($port-input, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="math"] .component-icon { 
    color: $port-number;
    background-color: rgba($port-number, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="text"] .component-icon { 
    color: $port-string;
    background-color: rgba($port-string, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="options"] .component-icon { 
    color: $port-options;
    background-color: rgba($port-options, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="start"] .component-icon { 
    color: $port-start;
    background-color: rgba($port-start, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="random"] .component-icon { 
    color: $port-random;
    background-color: rgba($port-random, 0.1);
    border-radius: 50%;
  }
  
  &[data-type="increment"] .component-icon { 
    color: $port-increment;
    background-color: rgba($port-increment, 0.1);
    border-radius: 50%;
  }
  
  // Special styling for favorite items
  &.favorite-item {
    background: linear-gradient(135deg, rgba($primary, 0.05) 0%, rgba($primary, 0.1) 100%);
    border-color: rgba($primary, 0.2);
  }
  
  // Drag state
  &.dragging {
    opacity: 0.7;
    transform: scale(0.95);
    box-shadow: $shadow-md;
  }
}

// Favorites section
.favorites-section {
  margin-bottom: $spacing-md;
  padding: 0 $spacing-sm;
  
  .favorites-header {
    font-size: $font-size-sm;
    font-weight: $font-weight-medium;
    color: $primary;
    margin-bottom: $spacing-sm;
    padding: $spacing-xs 0;
    border-bottom: 1px solid $border-color;
  }
  
  .favorites-list {
    display: flex;
    gap: $spacing-xs;
    flex-wrap: wrap;
  }
}

// Empty state
.components-empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 200px;
  text-align: center;
  padding: $spacing-lg;
  color: $text-hint;
  
  .empty-icon {
    font-size: 36px;
    margin-bottom: $spacing-md;
    opacity: 0.6;
  }
  
  h4 {
    font-size: $font-size-lg;
    margin-bottom: $spacing-sm;
    color: $text-secondary;
  }
  
  p {
    font-size: $font-size-sm;
    max-width: 240px;
  }
}

// Responsive styles for small screens
@media (max-width: 400px) {
  .component-item {
    max-width: calc(100% / 2 - #{$spacing-xs});
    aspect-ratio: 1;
    
    .component-name {
      font-size: $font-size-xs;
    }
    
    .component-icon {
      font-size: $font-size-lg;
    }
  }
}

// Right panel collapsed state adjustments
.right-panel.collapsed {
  .component-search, 
  .component-filters,
  .component-name {
    display: none;
  }
  
  .component-item {
    width: 40px;
    height: 40px;
    margin: $spacing-xs auto;
    padding: $spacing-xs;
    
    .component-icon {
      margin-bottom: 0;
    }
  }
  
  .category-header {
    justify-content: center;
    padding: $spacing-xs 0;
    
    .category-title, 
    .category-toggle {
      display: none;
    }
  }
}
