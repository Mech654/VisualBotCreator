{
  "name": "visualbotcreator",
  "version": "1.0.0",
  "description": "An awesome software to create and manage your own bots.",
  "type": "module",
  "main": "dist/main.js",
  "scripts": {
    "start": "electron .",
    "dev": "node cross_platform/dev-runner.js",
    "dev:actual": "npm run clean && npm run dev-setup && concurrently --prefix-colors \"yellow,cyan,blue,magenta,green\" -n webpack,sass,tsc,preload,electron \"npm run sass:watch\" \"tsc -w\" \"npm run dev:preload\" \"cross-env NODE_ENV=development webpack serve --config webpack.config.mjs --mode development\" \"wait-on http://localhost:4000/src/index.html && echo '\nüèçÔ∏è Running electron app\n' && npm run dev:electron\" | node cross_platform/log-filter.js",
    "dev:unfiltered": "npm run clean && npm run dev-setup && concurrently --prefix-colors \"yellow,cyan,blue,magenta,green\" -n webpack,sass,tsc,preload,electron \"npm run sass:watch\" \"tsc -w\" \"npm run dev:preload\" \"cross-env NODE_ENV=development webpack serve --config webpack.config.mjs --mode development\" \"wait-on http://localhost:4000/src/index.html && echo '\nüèçÔ∏è Running electron app\n' && npm run dev:electron\"",
    "dev:electron": "cross-env NODE_ENV=development nodemon",
    "dev:restart": "cross-env NODE_ENV=development node restart.js",
    "dev:quick": "concurrently -n electron \"cross-env NODE_ENV=development ELECTRON_ARGS='--no-sandbox' node restart.js\"",
    "build": "npm run clean && tsc && npm run copy-assets && shx mv dist/preload.js dist/preload-esm.mjs",
    "watch": "tsc -w",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "format": "prettier --write \"**/*.{ts,js,json,html,css}\"",
    "format:check": "prettier --check \"**/*.{ts,js,json,html,css}\"",
    "clean": "rimraf dist",
    "rebuild": "npm run clean && npm run build",
    "copy-assets": "npm run sass && shx mkdir -p dist/src && shx cp -r app/src/assets dist/src/ && shx cp -r app/src/js dist/src/ && npm run copy-html",
    "dev-setup": "npm run sass && shx mkdir -p dist/src && shx cp -r app/src/assets dist/src/ && shx cp -r app/src/js dist/src/ && npm run copy-html",
    "watch:js-files": "nodemon --watch app/src/js --ext js,ts --ignore *.d.ts --exec \"shx cp -r app/src/js dist/src/\"",
    "copy-html": "shx mkdir -p dist/src && shx cp app/src/index.html dist/src/index.html && shx cp app/src/builder.html dist/src/builder.html && node cross_platform/fix-paths.js && node cross_platform/sleep.js 1000",
    "sass": "npm run sass:builder && npm run sass:index",
    "sass:builder": "sass app/src/scss/builder.scss:dist/src/styles/builder.css --style compressed --no-source-map",
    "sass:index": "sass app/src/scss/index.scss:dist/src/styles/index.css --style compressed --no-source-map",
    "sass:watch": "concurrently \"npm run sass:builder:watch\" \"npm run sass:index:watch\"",
    "sass:builder:watch": "sass app/src/scss/builder.scss:dist/src/styles/builder.css --watch",
    "sass:index:watch": "sass app/src/scss/index.scss:dist/src/styles/index.css --watch",
    "dev:sass": "concurrently \"npm run sass:watch\" \"npm run dev\"",
    "webpack:build": "webpack --mode production",
    "webpack:watch": "webpack --watch --mode development",
    "build:preload": "tsc --project preload.tsconfig.json",
    "dev:preload": "tsc-watch --project preload.tsconfig.json --onSuccess \"shx mv dist/preload.js dist/preload-esm.mjs\"",
    "restart:debug": "cross-env RESTART_DELAY=0 NODEMON_RESTART=true NODE_ENV=development node restart.js",
    "dist": "npm run build && electron-builder"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@types/sqlite3": "^3.1.11",
    "leader-line-new": "^1.1.9",
    "mathjs": "^14.4.0",
    "sqlite3": "^5.1.7",
    "sweetalert2": "^11.21.2",
    "vm2": "^3.9.19"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^22.14.1",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.29.1",
    "autoprefixer": "^10.4.21",
    "buffer": "^6.0.3",
    "concurrently": "^7.6.0",
    "copy-webpack-plugin": "^13.0.0",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "electron": "^35.1.5",
    "electron-builder": "^24.6.0",
    "electron-rebuild": "^3.2.9",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.2.6",
    "kill-port": "^2.0.1",
    "mini-css-extract-plugin": "^2.9.2",
    "nodemon": "^3.1.9",
    "postcss": "^8.5.3",
    "prettier": "^3.5.3",
    "process": "^0.11.10",
    "rimraf": "^5.0.0",
    "sass": "^1.87.0",
    "sass-loader": "^16.0.5",
    "shx": "^0.4.0",
    "style-loader": "^4.0.0",
    "tailwindcss": "^4.1.3",
    "ts-loader": "^9.5.2",
    "tsc-watch": "^6.0.0",
    "typescript": "^5.8.3",
    "wait-on": "^8.0.3",
    "webpack": "^5.99.7",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.2.1",
    "webpack-hot-middleware": "^2.26.1"
  },
  "build": {
    "appId": "com.visualbotcreator.app",
    "productName": "Visual Bot Creator",
    "mac": {
      "target": "dmg",
      "category": "public.app-category.utilities",
      "icon": "dist/src/assets/images/mascot.png"
    },
    "win": {
      "target": "nsis",
      "icon": "dist/src/assets/images/mascot.png"
    },
    "linux": {
      "target": "AppImage",
      "icon": "dist/src/assets/images/mascot.png"
    },
    "directories": {
      "output": "dist"
    },
    "files": [
      "dist/**/*",
      "package.json"
    ],
    "publish": null
  }
}
